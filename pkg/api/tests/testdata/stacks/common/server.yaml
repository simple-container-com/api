schemaVersion: 1.0
provisioner:
  type: pulumi
  config:
    state-storage:
      type: gcp-bucket
      config:
        credentials: "${auth:gcloud}"
        projectId: "${auth:gcloud.projectId}"
        provision: true
#    state-storage:
#      type: s3-bucket
#      config:
#        credentials: "${auth:aws}"
#        account: "${auth:aws.projectId}"
#        provision: true
    secrets-provider:
      type: gcp-kms
      config:
        provision: true
        projectId: "${auth:gcloud.projectId}"
        keyName: mypulumi-base-kms-key
        keyLocation: global
        credentials: "${auth:gcloud}"
#  type: pulumi
#  config:
#    organization: mypulumiorg
#    state-storage:
#      config:
#        type: pulumi-cloud
#        credentials: "${auth:pulumi}"
#        provision: true
#    secrets-provider:
#      type: pulumi-cloud
#      config:
#        organization: mypulumi-other-org
#        provision: true
#        credentials: "${auth:pulumi}"
secrets:
  type: gcp-secrets-manager
  config:
    projectId: "${auth:gcloud.projectId}"
    credentials: "${auth:gcloud}"
templates:
  stack-per-app-aws:
    type: ecs-fargate
    config:
      credentials: "${auth:aws}"
      account: "${auth:aws.projectId}"
  stack-per-app:
    type: cloudrun
    config:
      projectId: "${auth:gcloud.projectId}"
      credentials: "${auth:gcloud}"
cicd:
  type: github-actions
  config:
    auth-token: "${secret:GITHUB_TOKEN}"
resources:
  registrar:
    type: cloudflare
    config:
      credentials: "${secret:CLOUDFLARE_API_TOKEN}"
      accountId: 12345
      zoneName: sc-refapp.org
      dnsRecords:
        - name: "@"
          type: "TXT"
          value: "MS=ms83691649"