schemaVersion: "1.8.1"
projectName: simple-container-api
projectRoot: .
version: ${env:VERSION:0.0.0}
default:
  build:
    args:
      package: github.com/simple-container-com/api
profiles:
  skip-tools:
  skip-test:
    activation:
      skip-tests: true
    build:
      env:
        SKIP_TESTS: "true"
modules:
  - name: api
    build:
      steps:
        - task: tools
        - task: build-all
    deploy:
      environments:
        prod:
          autoDeploy: true
      steps:
        - task: rebuild
        - task: deploy
tasks:
  tools:
    runOn: host
    runIf: "!${profile:skip-tools.active}"
    script:
      - cat tools.go | grep _ | awk -F'"' '{print $2}' | xargs -tI % go get %
      - go mod download
      - go generate -tags tools
      - go mod tidy
  build-all:
    runOn: host
    script:
      - if [ "${SKIP_TESTS}" != 'true' ]; then go test ./...; else echo "Skipping tests"; fi
      - ${project:root}/bin/gofumpt -l -w .
      - ${project:root}/bin/golangci-lint linters
      - go build ./...
      - welder run build -a os=linux -a arch=amd64
#      - welder run build -a os=darwin -a arch=arm64
#      - welder run build -a os=darwin -a arch=amd64
      - cp ${project:root}/sc.sh ${project:root}/stacks/dist/bundle/sc.sh
      - sed -i -e 's/VERSION="0\.0\.0"/VERSION="${project:version}"/g' ${project:root}/stacks/dist/bundle/sc.sh
  build:
    runOn: host
    env:
      GOOS: ${arg:os:linux}
      GOARCH: ${arg:arch:amd64}
    script:
      - echo "Building for ${GOOS}/${GOARCH}..."
      - if [ "${GOOS}" = "windows" ]; then export EXT=".exe"; else export EXT=""; fi
      - go build -ldflags "-s -w -X=${arg:package}/internal/build.Version=${project:version}" -o ${project:root}/dist/${GOOS}-${GOARCH}/sc${EXT} ./cmd/sc
      - cd ${project:root}/dist/${GOOS}-${GOARCH} && tar -czf sc-${GOOS}-${GOARCH}.tar.gz sc${EXT}
      - mv ${project:root}/dist/${GOOS}-${GOARCH}/sc-${GOOS}-${GOARCH}.tar.gz ${project:root}/stacks/dist/bundle/sc-${GOOS}-${GOARCH}.tar.gz
      - cp ${project:root}/stacks/dist/bundle/sc-${GOOS}-${GOARCH}.tar.gz ${project:root}/stacks/dist/bundle/sc-${GOOS}-${GOARCH}-v${project:version}.tar.gz
  deploy:
    runOn: host
    script:
      - ${project:root}/bin/sc secrets reveal
      - ${project:root}/bin/sc deploy -s dist -e prod
  rebuild:
    runOn: host
    script:
      - go build -o ${project:root}/bin/sc ./cmd/sc